{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Magico/Desktop/appout/binance/front/src/app/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Home() {\r\n  const [balances, setBalances] = useState([]);\r\n  const [totalUSDT, setTotalUSDT] = useState(0);\r\n  const [freeUSDT, setFreeUSDT] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [marketData, setMarketData] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"profit\"); // üîπ ÿßŸÑÿ±ÿ®ÿ≠ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const fetchMarketData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/trade/market\");\r\n      setMarketData(response.data.marketData);\r\n      sortData(response.data.marketData, sortBy);\r\n    } catch (error) {\r\n      console.error(\"Error fetching market data:\", error);\r\n    }\r\n  };\r\n  const fetchBalance = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/trade/balance\");\r\n      setBalances(response.data.balances);\r\n      setTotalUSDT(response.data.totalUSDT);\r\n      setFreeUSDT(response.data.freeUSDT);\r\n    } catch (error) {\r\n      console.error(\"Error fetching balance:\", error);\r\n    }\r\n  };\r\n  const sortData = (data, criteria) => {\r\n    let sortedData = [...data];\r\n\r\n    if (criteria === \"profit\") {\r\n      sortedData.sort((a, b) => b.changePercent - a.changePercent); // üîπ ÿßŸÑÿ£ÿπŸÑŸâ ÿ±ÿ®ÿ≠Ÿãÿß\r\n    } else if (criteria === \"loss\") {\r\n      sortedData.sort((a, b) => a.changePercent - b.changePercent); // üîπ ÿßŸÑÿ£ÿπŸÑŸâ ÿÆÿ≥ÿßÿ±ÿ©Ÿã\r\n    } else if (criteria === \"new\") {\r\n      sortedData.sort(() => Math.random() - 0.5); // üîπ ÿ™ÿ±ÿ™Ÿäÿ® ÿπÿ¥Ÿàÿßÿ¶Ÿä\r\n    }\r\n\r\n    setFilteredData(sortedData);\r\n  };\r\n  useEffect(() => {\r\n    fetchBalance();\r\n    sortData(marketData, sortBy);\r\n    const interval = setInterval(fetchMarketData, 10000); // üîπ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸÉŸÑ 10 ÿ´ŸàÿßŸÜŸç\r\n    return () => clearInterval(interval);\r\n  }, [sortBy, marketData]);\r\n\r\n  const handleTrade = async (symbol, side) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/trade/order\", { symbol, side });\r\n      alert(`‚úÖ Order placed successfully: ${response.data.order.orderId}`);\r\n      await fetchBalance();\r\n    } catch (error) {\r\n      alert(error.response?.data?.error || \"‚ùå Trade failed!\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">My Binance Balance</h1>\r\n      <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl\">\r\n        <table className=\"w-full border-collapse border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200\">\r\n              <th className=\"p-2 border\">Asset</th>\r\n              <th className=\"p-2 border\">Free Balance</th>\r\n              <th className=\"p-2 border\">Value in USDT</th>\r\n              <th className=\"p-2 border\">Profit/Loss %</th>\r\n              <th className=\"p-2 border\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {balances.map((balance, index) => (\r\n              <tr key={index} className=\"border\">\r\n                <td className=\"p-2 border\">{balance.asset}</td>\r\n                <td className=\"p-2 border\">{balance.free}</td>\r\n                <td className=\"p-2 border\">${balance.valueInUSDT}</td>\r\n                <td\r\n                  className={`p-2 border font-bold ${\r\n                    balance.profitLossPercent >= 0 ? \"text-green-500\" : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {balance.profitLossPercent}%\r\n                </td>\r\n                <td className=\"p-2 border\">\r\n                  <button\r\n                    className=\"bg-green-500 text-white px-3 py-1 rounded mr-2 disabled:opacity-50\"\r\n                    onClick={() => handleTrade(balance.asset, \"BUY\")}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Processing...\" : \"Buy 100%\"}\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-red-500 text-white px-3 py-1 rounded disabled:opacity-50\"\r\n                    onClick={() => handleTrade(balance.asset, \"SELL\")}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Processing...\" : \"Sell 100%\"}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"mt-4 p-4 bg-gray-200 text-lg font-semibold text-center\">\r\n          <p>Total USDT: <span className=\"text-green-600\">${totalUSDT} USDT</span></p>\r\n          <p>Available USDT: <span className=\"text-blue-600\">${freeUSDT} USDT</span></p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Market Prices</h1>\r\n\r\n      {/* üîπ ÿ£ÿ≤ÿ±ÿßÿ± ÿßŸÑÿ™ÿµŸÅŸäÿ© */}\r\n      <div className=\"mb-4 flex gap-2\">\r\n        <button\r\n          className={`px-4 py-2 rounded ${sortBy === \"profit\" ? \"bg-blue-500 text-white\" : \"bg-gray-300\"}`}\r\n          onClick={() => setSortBy(\"profit\")}\r\n        >\r\n          ÿ£ÿπŸÑŸâ ÿ±ÿ®ÿ≠ üìà\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 rounded ${sortBy === \"loss\" ? \"bg-red-500 text-white\" : \"bg-gray-300\"}`}\r\n          onClick={() => setSortBy(\"loss\")}\r\n        >\r\n          ÿ£ÿπŸÑŸâ ÿÆÿ≥ÿßÿ±ÿ© üìâ\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 rounded ${sortBy === \"new\" ? \"bg-green-500 text-white\" : \"bg-gray-300\"}`}\r\n          onClick={() => setSortBy(\"new\")}\r\n        >\r\n          ÿßŸÑÿ£ÿ≠ÿØÿ´ üîÑ\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl\">\r\n        <table className=\"w-full border-collapse border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200\">\r\n              <th className=\"p-2 border\">ÿßŸÑÿπŸÖŸÑÿ©</th>\r\n              <th className=\"p-2 border\">ÿßŸÑÿ≥ÿπÿ± ÿßŸÑÿ£ÿÆŸäÿ±</th>\r\n              <th className=\"p-2 border\">ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ™ÿ∫ŸäŸäÿ± (24 ÿ≥ÿßÿπÿ©)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map((data, index) => (\r\n              <tr key={index} className=\"border\">\r\n                <td className=\"p-2 border\">{data.asset}</td>\r\n                <td className=\"p-2 border\">${data.lastPrice}</td>\r\n                <td\r\n                  className={`p-2 border font-bold ${\r\n                    data.changePercent >= 0 ? \"text-green-500\" : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {data.changePercent}%\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}