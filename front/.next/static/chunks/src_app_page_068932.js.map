{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Magico/Desktop/test/binanc_bot/front/src/app/page.js"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Home() {\n  const [balances, setBalances] = useState([]);\n  const [totalUSDT, setTotalUSDT] = useState(0);\n  const [freeUSDT, setFreeUSDT] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  // ‚úÖ ÿØÿßŸÑÿ© ŸÑÿ¨ŸÑÿ® ÿßŸÑÿ±ÿµŸäÿØ ŸÖŸÜ ÿßŸÑŸÄ API Ÿàÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑŸàÿßÿ¨Ÿáÿ©\n  const fetchBalance = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/trade/balance\");\n      setBalances(response.data.balances);\n      setTotalUSDT(response.data.totalUSDT);\n      setFreeUSDT(response.data.freeUSDT);\n    } catch (error) {\n      console.error(\"Error fetching balance:\", error);\n    }\n  };\n\n  // ‚úÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿπŸÜÿØ ŸÅÿ™ÿ≠ ÿßŸÑÿµŸÅÿ≠ÿ©\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  // ‚úÖ ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑÿ®Ÿäÿπ ÿ£Ÿà ÿßŸÑÿ¥ÿ±ÿßÿ° ŸÖÿπ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ±ÿµŸäÿØ ÿ®ÿπÿØ ÿßŸÑŸÜÿ¨ÿßÿ≠\n  const handleTrade = async (symbol, side) => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/trade/order\", {\n        symbol,\n        side,\n      });\n\n      // alert(`‚úÖ Order placed successfully: ${response.data.order.orderId}`);\n\n      // üîÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ±ÿµŸäÿØ ŸÖÿ®ÿßÿ¥ÿ±ÿ© ÿ®ÿπÿØ ÿßŸÑÿπŸÖŸÑŸäÿ©\n      await fetchBalance();\n    } catch (error) {\n      alert(error.response?.data?.error || \"‚ùå Trade failed!\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">My Binance Balance</h1>\n      <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-2xl\">\n        <table className=\"w-full border-collapse border border-gray-300\">\n          <thead>\n            <tr className=\"bg-gray-200\">\n              <th className=\"p-2 border\">Asset</th>\n              <th className=\"p-2 border\">Free Balance</th>\n              <th className=\"p-2 border\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {balances.map((balance, index) => (\n              <tr key={index} className=\"border\">\n                <td className=\"p-2 border\">{balance.asset}</td>\n                <td className=\"p-2 border\">{parseFloat(balance.free).toFixed(6)}</td>\n                <td className=\"p-2 border\">\n                  <button\n                    className=\"bg-green-500 text-white px-3 py-1 rounded mr-2 disabled:opacity-50\"\n                    onClick={() => handleTrade(balance.asset, \"BUY\")}\n                    disabled={loading}\n                  >\n                    {loading ? \"Processing...\" : \"Buy 100%\"}\n                  </button>\n                  <button\n                    className=\"bg-red-500 text-white px-3 py-1 rounded disabled:opacity-50\"\n                    onClick={() => handleTrade(balance.asset, \"SELL\")}\n                    disabled={loading}\n                  >\n                    {loading ? \"Processing...\" : \"Sell 100%\"}\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <div className=\"mt-4 p-4 bg-gray-200 text-lg font-semibold text-center\">\n          <p>Total USDT: <span className=\"text-green-600\">${totalUSDT.toFixed(2)} USDT</span></p>\n          <p>Available USDT: <span className=\"text-blue-600\">${freeUSDT.toFixed(2)} USDT</span></p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,+CAA+C;IAC/C,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;YACjC,YAAY,SAAS,IAAI,CAAC,QAAQ;YAClC,aAAa,SAAS,IAAI,CAAC,SAAS;YACpC,YAAY,SAAS,IAAI,CAAC,QAAQ;QACpC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,kCAAkC;IAClC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR;QACF;yBAAG,EAAE;IAEL,qDAAqD;IACrD,MAAM,cAAc,OAAO,QAAQ;QACjC,WAAW;QACX,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,yCAAyC;gBACzE;gBACA;YACF;YAEA,wEAAwE;YAExE,qCAAqC;YACrC,MAAM;QACR,EAAE,OAAO,OAAO;YACd,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;QACvC;QACA,WAAW;IACb;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;0CACC,cAAA,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;;;;;;;;;;;;0CAG/B,6LAAC;0CACE,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,6LAAC;wCAAe,WAAU;;0DACxB,6LAAC;gDAAG,WAAU;0DAAc,QAAQ,KAAK;;;;;;0DACzC,6LAAC;gDAAG,WAAU;0DAAc,WAAW,QAAQ,IAAI,EAAE,OAAO,CAAC;;;;;;0DAC7D,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC;wDACC,WAAU;wDACV,SAAS,IAAM,YAAY,QAAQ,KAAK,EAAE;wDAC1C,UAAU;kEAET,UAAU,kBAAkB;;;;;;kEAE/B,6LAAC;wDACC,WAAU;wDACV,SAAS,IAAM,YAAY,QAAQ,KAAK,EAAE;wDAC1C,UAAU;kEAET,UAAU,kBAAkB;;;;;;;;;;;;;uCAhB1B;;;;;;;;;;;;;;;;kCAwBf,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAE;kDAAY,6LAAC;wCAAK,WAAU;;4CAAiB;4CAAE,UAAU,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CACvE,6LAAC;;oCAAE;kDAAgB,6LAAC;wCAAK,WAAU;;4CAAgB;4CAAE,SAAS,OAAO,CAAC;4CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKnF;GAvFwB;KAAA"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}