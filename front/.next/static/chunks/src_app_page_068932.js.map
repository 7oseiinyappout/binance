{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Magico/Desktop/appout/binance/front/src/app/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Home() {\r\n  const [balances, setBalances] = useState([]);\r\n  const [totalUSDT, setTotalUSDT] = useState(0);\r\n  const [freeUSDT, setFreeUSDT] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // ‚úÖ ÿØÿßŸÑÿ© ŸÑÿ¨ŸÑÿ® ÿßŸÑÿ±ÿµŸäÿØ ŸÖŸÜ ÿßŸÑŸÄ API Ÿàÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑŸàÿßÿ¨Ÿáÿ©\r\n  const fetchBalance = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/trade/balance\");\r\n      setBalances(response.data.balances);\r\n      setTotalUSDT(response.data.totalUSDT);\r\n      setFreeUSDT(response.data.freeUSDT);\r\n    } catch (error) {\r\n      console.error(\"Error fetching balance:\", error);\r\n    }\r\n  };\r\n\r\n  // ‚úÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿπŸÜÿØ ŸÅÿ™ÿ≠ ÿßŸÑÿµŸÅÿ≠ÿ©\r\n  useEffect(() => {\r\n    fetchBalance();\r\n  }, []);\r\n\r\n  // ‚úÖ ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑÿ®Ÿäÿπ ÿ£Ÿà ÿßŸÑÿ¥ÿ±ÿßÿ° ŸÖÿπ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ±ÿµŸäÿØ ÿ®ÿπÿØ ÿßŸÑŸÜÿ¨ÿßÿ≠\r\n  const handleTrade = async (symbol, side) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/trade/order\", {\r\n        symbol,\r\n        side,\r\n      });\r\n\r\n      // alert(`‚úÖ Order placed successfully: ${response.data.order.orderId}`);\r\n\r\n      // üîÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ±ÿµŸäÿØ ŸÖÿ®ÿßÿ¥ÿ±ÿ© ÿ®ÿπÿØ ÿßŸÑÿπŸÖŸÑŸäÿ©\r\n      await fetchBalance();\r\n    } catch (error) {\r\n      alert(error.response?.data?.error || \"‚ùå Trade failed!\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">My Binance Balance</h1>\r\n      <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-2xl\">\r\n        <table className=\"w-full border-collapse border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200\">\r\n              <th className=\"p-2 border\">Asset</th>\r\n              <th className=\"p-2 border\">Free Balance</th>\r\n              <th className=\"p-2 border\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {balances.map((balance, index) => (\r\n              <tr key={index} className=\"border\">\r\n                <td className=\"p-2 border\">{balance.asset}</td>\r\n                <td className=\"p-2 border\">{parseFloat(balance.free).toFixed(6)}</td>\r\n                <td className=\"p-2 border\">\r\n                  <button\r\n                    className=\"bg-green-500 text-white px-3 py-1 rounded mr-2 disabled:opacity-50\"\r\n                    onClick={() => handleTrade(balance.asset, \"BUY\")}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Processing...\" : \"Buy 100%\"}\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-red-500 text-white px-3 py-1 rounded disabled:opacity-50\"\r\n                    onClick={() => handleTrade(balance.asset, \"SELL\")}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Processing...\" : \"Sell 100%\"}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"mt-4 p-4 bg-gray-200 text-lg font-semibold text-center\">\r\n          <p>Total USDT: <span className=\"text-green-600\">${totalUSDT.toFixed(2)} USDT</span></p>\r\n          <p>Available USDT: <span className=\"text-blue-600\">${freeUSDT.toFixed(2)} USDT</span></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,+CAA+C;IAC/C,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;YACjC,YAAY,SAAS,IAAI,CAAC,QAAQ;YAClC,aAAa,SAAS,IAAI,CAAC,SAAS;YACpC,YAAY,SAAS,IAAI,CAAC,QAAQ;QACpC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,kCAAkC;IAClC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR;QACF;yBAAG,EAAE;IAEL,qDAAqD;IACrD,MAAM,cAAc,OAAO,QAAQ;QACjC,WAAW;QACX,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,yCAAyC;gBACzE;gBACA;YACF;YAEA,wEAAwE;YAExE,qCAAqC;YACrC,MAAM;QACR,EAAE,OAAO,OAAO;YACd,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;QACvC;QACA,WAAW;IACb;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;0CACC,cAAA,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;;;;;;;;;;;;0CAG/B,6LAAC;0CACE,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,6LAAC;wCAAe,WAAU;;0DACxB,6LAAC;gDAAG,WAAU;0DAAc,QAAQ,KAAK;;;;;;0DACzC,6LAAC;gDAAG,WAAU;0DAAc,WAAW,QAAQ,IAAI,EAAE,OAAO,CAAC;;;;;;0DAC7D,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC;wDACC,WAAU;wDACV,SAAS,IAAM,YAAY,QAAQ,KAAK,EAAE;wDAC1C,UAAU;kEAET,UAAU,kBAAkB;;;;;;kEAE/B,6LAAC;wDACC,WAAU;wDACV,SAAS,IAAM,YAAY,QAAQ,KAAK,EAAE;wDAC1C,UAAU;kEAET,UAAU,kBAAkB;;;;;;;;;;;;;uCAhB1B;;;;;;;;;;;;;;;;kCAwBf,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAE;kDAAY,6LAAC;wCAAK,WAAU;;4CAAiB;4CAAE,UAAU,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CACvE,6LAAC;;oCAAE;kDAAgB,6LAAC;wCAAK,WAAU;;4CAAgB;4CAAE,SAAS,OAAO,CAAC;4CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKnF;GAvFwB;KAAA"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}